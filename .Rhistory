# Split the data into training and test set
# set.seed(123)
# training.samples <- Boston$medv %>%
#   createDataPartition(p = 0.8, list = FALSE)
# train.data  <- Boston[training.samples, ]
# test.data <- Boston[-training.samples, ]
head(Boston)
pred <- dplyr::select(Boston, crim:lstat)
names(pred)
pred
cor.matrix <- cor(pred)
cor.matrix
ggcorrplot(cor.matrix)
ggcorrplot(cor(pred))
ggcorrplot(cor.matrix, method = "circle")
ggcorrplot(cor.matrix, method = "circle", lab=TRUE)
p.mat <- (abs(cor.matrix) > 0.7)
p.mat
# Build the model
model1 <- lm(medv ~ ., data = Boston)
summary(model1)
vif(model1)
pollution <- read.table("data/sulphur.dioxide.txt", header=TRUE)
View(pollution)
cor.matrix <- cor(pollution)
cor.matrix
p.mat <- (abs(cor.matrix) > 0.7)
ggcorrplot(cor.matrix,
hc.order = TRUE, method = "circle",
type = "lower", p.mat = p.mat
)
# Build the model
model1 <- lm(Pollution ~ ., data = pollution)
summary(model1)
vif(model1)
vif(model1)
model1 <- lm(Pollution ~ Temp + Industry + Wind + Rain + Wet.days, data = pollution)
summary(model1)
dati.mod <- read.csv("data/dati.mod.csv")
head(dati.mod)
varexpl <- dati.mod[,8:15]
head(varexpl)
hist(dati.mod$CattSiNo)
table(dati.mod$CattSiNo)
summary(varexpl)
with(dati.mod,
boxplot(Incl ~ CattSiNo, main="Slope"))
with(dati.mod,
boxplot(Alt ~ CattSiNo, main="Altitude"))
with(dati.mod,
boxplot(copveg ~ CattSiNo, main="Veg cover"))
with(dati.mod,
boxplot(NSpecie ~ CattSiNo, main="N species"))
with(dati.mod,
boxplot(media.rocce ~ CattSiNo, main="Mean diam"))
with(dati.mod,
boxplot(mediana.rocce ~ CattSiNo, main="Median diam"))
with(dati.mod,
boxplot(sd.rocce ~ CattSiNo, main="SD diam"))
with(dati.mod,
boxplot(Esp.tr ~ CattSiNo, main="Aspect"))
par(mfrow=c(1,2))
dotchart(dati.mod$sd.rocce,
ylab = "Order of observations",
xlab = "SD diam", main = "")
dotchart(dati.mod$sd.rocce,
groups = dati.mod$CattSiNo,
ylab = "CattSiNo",
xlab = "SD diam", main = "")
par(mfrow=c(1,1))
# eliminazione dell'outlier
subset(dati.mod, dati.mod$sd.rocce > 200)
dati.mod.new <- subset(dati.mod, dati.mod$sd.rocce < 200)
# trasformazione della variabile x
boxplot(dati.mod$sd.rocce)
boxplot(log(dati.mod$sd.rocce))
dati.mod.new2 <- cbind(dati.mod, logSD = log(dati.mod$sd.rocce))
dati.mod.new2 <- data.frame(dati.mod, logSD = log(dati.mod$sd.rocce))
head(dati.mod.new2)
cor(varexpl)
fm1 <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce +
Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1)
View(dati.mod.new)
hist(dati.mod.new$Ncatture)
fm1.pois <- glm(Ncatture ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce +
Esp.tr,
family=poisson, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.pois)
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce +
sd.rocce, #
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
#, offset=Noccasioni)
summary(fm1)
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt +
copveg +
# NSpecie +
# media.rocce +
mediana.rocce,
# sd.rocce, #
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt +
# copveg +
# NSpecie +
# media.rocce +
mediana.rocce,
# sd.rocce, #
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt +
copveg,
# NSpecie +
# media.rocce +
#mediana.rocce,
# sd.rocce, #
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
# UP TO YOU!!!
fm1.noexp <- glm(CattSiNo ~ Incl +
Alt,
#copveg,
# NSpecie +
# media.rocce +
#mediana.rocce,
# sd.rocce, #
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm1.noexp)
fm2 <- glm(CattSiNo ~ #Incl +
Alt +
# copveg +
# NSpecie +
media.rocce, #+
# mediana.rocce +
# sd.rocce +
# Esp.tr,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit2prob <- function(logit){
odds <- exp(logit)
prob <- odds / (1 + odds)
return(prob)
}
logit2prob(coef(fm2))
predict.alt <- predict(fm2,
data.frame(Alt=dati.mod.new$Alt,
media.rocce=mean(dati.mod.new$media.rocce)),
type = "response")
tab <- data.frame(Alt=dati.mod.new$Alt,
prob = predict.alt)
# tab
library(dplyr)
arrange(tab, Alt)
plot(arrange(tab, Alt))
library(sjPlot)
plot_model(fm2, type = "pred")
library(sjPlot)
plot_model(fm2, type = "pred")
plot_model(fm2)
plot_model(fm2, type = "pred", ci.style = c("whisker"))
plot_model(fm2, type = "pred", ci.style = c("bar"))
plot_model(fm2, type = "est")
plot_model(fm2, type = "eff")
library(sjPlot)
plot_model(fm2, type = "eff")
plot_model(fm2, type = "eff", terms = c("Alt"))
plot_model(fm2, type = "eff", terms = c("Alt","media.rocce"))
plot_model(fm2, type = "eff", terms = c("Alt"))
fm2 <- glm(CattSiNo ~ Alt + I(Alt^2),
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
fm2 <- glm(CattSiNo ~ Alt + I(Alt^2),
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
# ok:
fm2 <- glm(CattSiNo ~ Alt,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
#, offset=Noccasioni)
summary(fm2)
# no:
fm2 <- glm(CattSiNo ~ I(Alt^2),
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
fm2 <- glm(CattSiNo ~ Alt * media.rocce,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
# ok:
fm2 <- glm(CattSiNo ~ Alt + media.rocce,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
# no:
fm2 <- glm(CattSiNo ~ Alt:media.rocce,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
# no:
fm2 <- glm(CattSiNo ~ Alt + Alt:media.rocce,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
fm2 <- glm(CattSiNo ~ Alt,
family=binomial, data=dati.mod.new)
#, offset=Noccasioni)
summary(fm2)
View(dati.mod.new)
View(dati.mod)
knitr::opts_chunk$set(echo = TRUE)
treesdummy.lm <- lm(Volume ~ Tall, data = trees)
knitr::opts_chunk$set(echo = TRUE)
trees$Tall <- cut(trees$Height, breaks = c(-Inf, 76, Inf),
labels = c("no", "yes"))
trees$Tall[1:5]
class(trees$Tall)
treesdummy.lm <- lm(Volume ~ Girth + Tall, data = trees)
summary(treesdummy.lm)
# # we split the trees data into
# # two pieces, with groups determined by the Tall variable:
# treesTall <- split(trees, trees$Tall)
# # we add the Fitted values to each
# # piece via predict
# treesTall[["yes"]]$Fit <- predict(treesdummy.lm, treesTall[["yes"]])
# treesTall[["no"]]$Fit <- predict(treesdummy.lm, treesTall[["no"]])
# # we set up a plot for the variables Volume versus Girth
# # but we do not
# # plot anything yet (type = n) because we want to use different symbols for the two groups
# plot(Volume ~ Girth, data = trees, type = "n")
# # we add points to the plot for the Tall = yes trees and use an open circle for a plot character
# # (pch = 1), followed by points for the Tall = no trees with a triangle character (pch = 2).
# points(Volume ~ Girth, data = treesTall[["yes"]], pch = 1)
# points(Volume ~ Girth, data = treesTall[["no"]], pch = 2)
# # we add regression lines to the plot, one for each group
# lines(Fit ~ Girth, data = treesTall[["yes"]])
# lines(Fit ~ Girth, data = treesTall[["no"]])
plot(Volume ~ Girth, data = trees)
abline(a = -34, b = 4.69, col="red") # alberi bassi
abline(a = -30, b = 4.69, col="blue") # alberi alti
treesdummy.lm <- lm(Volume ~ Tall, data = trees)
summary(treesdummy.lm)
tall.trees <- subset(trees, trees$Tall=="yes")
small.trees <- subset(trees, trees$Tall=="no")
t.test(tall.trees$Volume, small.trees$Volume)
treesdummy.lm <- lm(Volume ~ Tall, data = trees)
summary(treesdummy.lm)
head(trees)
tall.trees <- subset(trees, trees$Tall=="yes")
small.trees <- subset(trees, trees$Tall=="no")
t.test(tall.trees$Volume, small.trees$Volume)
scores.graderA = c(4,3,4,5,2,3,4,5)
scores.graderB = c(4,4,5,5,4,5,4,4)
scores.graderC = c(3,4,2,4,5,5,4,4)
scores <- c(scores.graderA,scores.graderB,scores.graderC)
graders <- c(rep("A",8), rep("B",8), rep("C",8))
scores.graders <- data.frame(graders,scores)
boxplot(scores ~ graders, data=scores.graders)
scores.graders
mod <- lm(scores ~ graders, data=scores.graders)
summary(mod)
summary(aov(scores ~ graders, data=scores.graders))
anova(lm(scores ~ graders, data=scores.graders))
data(PlantGrowth)
plant.df = PlantGrowth
data(PlantGrowth)
plant.df = PlantGrowth
plant.df$group = factor(plant.df$group, labels = c("Control", "Treatment 1", "Treatment 2"))
plant.df
str(plant.df)
hist(plant.df$weight)
shapiro.test(plant.df$weight)
qqnorm(plant.df$weight); qqline(plant.df$weight)
boxplot(weight ~ group, data = plant.df)
summary(aov(weight ~ group, data=plant.df))
anova(lm(weight ~ group, data=plant.df))
mod <- lm(weight ~ group, data = plant.df)
summary(mod)
plant.df$group <- relevel(plant.df$group, ref="Treatment 1")
mod <- lm(weight ~ group, data = plant.df)
summary(mod)
by(dati.new$yields, dati.new$soil.type, var)
sand <- c(6,10,8,6,14,17,9,11,7,11)
clay <- c(17,15,3,11,14,12,12,8,10,13)
loam <- c(13,16,9,12,15,16,17,13,18,14)
dati <- data.frame(sand,clay,loam)
dati
colMeans(dati)
boxplot(dati)
soil.type <- c(rep("sand",10),
rep("clay",10),
rep("loam",10))
yields <- c(sand, clay, loam)
dati.new <- data.frame(soil.type, yields)
dati.new
by(dati.new$yields, dati.new$soil.type, var)
by(dati.new$yields, dati.new$soil.type, var)
sand <- c(6,10,8,6,14,17,9,11,7,11)
clay <- c(17,15,3,11,14,12,12,8,10,13)
loam <- c(13,16,9,12,15,16,17,13,18,14)
dati <- data.frame(sand,clay,loam)
dati
colMeans(dati)
boxplot(dati)
soil.type <- c(rep("sand",10),
rep("clay",10),
rep("loam",10))
yields <- c(sand, clay, loam)
dati.new <- data.frame(soil.type, yields)
dati.new
by(dati.new$yields, dati.new$soil.type, var)
fligner.test(yields ~ soil.type, data=dati.new)
by(dati.new$yields, dati.new$soil.type, var)
fligner.test(yields ~ soil.type, data=dati.new)
anova(lm(yields ~ soil.type, data=dati.new)
anova(lm(yields ~ soil.type, data=dati.new))
plot(anova.yields)
sand <- c(6,10,8,6,14,17,9,11,7,11)
clay <- c(17,15,3,11,14,12,12,8,10,13)
loam <- c(13,16,9,12,15,16,17,13,18,14)
dati <- data.frame(sand,clay,loam)
dati
colMeans(dati)
boxplot(dati)
soil.type <- c(rep("sand",10),
rep("clay",10),
rep("loam",10))
yields <- c(sand, clay, loam)
dati.new <- data.frame(soil.type, yields)
dati.new
by(dati.new$yields, dati.new$soil.type, var)
plot(anova.yields)
by(dati.new$yields, dati.new$soil.type, var)
dati.new$yields
dati.new$soil.type
var
by(dati.new$yields, dati.new$soil.type, var)
by(dati.new$yields, dati.new$soil.type, var(x))
var()
anova.yields <- anova(lm(yields ~ soil.type, data=dati.new))
plot(anova.yields)
anova.yields <- aov(yields ~ soil.type, data=dati.new)
plot(anova.yields)
dati.relevel <- dati.new
dati.relevel$soil.type <- relevel(dati.relevel$soil.type, ref="sand")
dati.relevel <- dati.new
dati.relevel$soil.type <- relevel(dati.relevel$soil.type, ref="sand")
mod.relevel <- lm(yields ~ soil.type, data=dati.relevel)
summary(mod.relevel)
dati.relevel <- dati.new
dati.relevel$soil.type <- relevel(dati.relevel$soil.type, ref="sand")
database_esercizio <- read.csv("database_esercizio.csv")
getwd()
database_esercizio <- read.csv("C:\Users\valen\Downloads\database_esercizio.csv")
database_esercizio <- read.csv("C:/Users/valen/Downloads/database_esercizio.csv")
database_esercizio <- read.csv("C:/Users/valen/Downloads/database_esercizio.csv")
head(database_esercizio)
database_esercizio <- read.csv("C:/Users/valen/Downloads/database_esercizio.csv", sep = ";")
database_esercizio <- read.csv("C:/Users/valen/Downloads/database_esercizio.csv", sep = ";")
head(database_esercizio)
database_esercizio <- read.csv("C:/Users/valen/Downloads/database_esercizio.csv", sep = ";")
head(database_esercizio)
hist(database_esercizio$weight_g)
anova.yields <- aov(yields ~ soil.type, data=dati.new)
sand <- c(6,10,8,6,14,17,9,11,7,11)
clay <- c(17,15,3,11,14,12,12,8,10,13)
loam <- c(13,16,9,12,15,16,17,13,18,14)
dati <- data.frame(sand,clay,loam)
dati
colMeans(dati)
boxplot(dati)
soil.type <- c(rep("sand",10),
rep("clay",10),
rep("loam",10))
yields <- c(sand, clay, loam)
dati.new <- data.frame(soil.type, yields)
dati.new
by(dati.new$yields, dati.new$soil.type, var)
anova.yields <- aov(yields ~ soil.type, data=dati.new)
summary(anova.yields)
weights <- read.csv("data/growth2.txt", sep="\t")
weights <- read.csv("data/growth2.txt", sep="\t")
getwd()
weights <- read.csv("data/growth2.txt", sep="\t")
setwd("C:/Users/valen/git/ECMA/")
weights <- read.csv("data/growth2.txt", sep="\t")
getwd()
getwd()
weights <- read.csv("C:/Users/valen/git/ECMA/data/growth2.txt", sep="\t")
head(weights)
getwd()
setwd("C:/Users/valen/git/ECMA")
rm(weights)
weights <- read.csv("data/growth2.txt", sep="\t")
weights <- read.csv("C:/Users/valen/git/ECMA/data/growth2.txt", sep="\t")
head(weights)
table(weights$diet, weights$supplement)
with(weights,
coplot(gain ~ diet|supplement,rows=2))
coplot(weights$gain ~ diet|supplement, rows = 2)
coplot(weights$gain ~ weights$diet|weights$supplement, rows = 2)
with(weights,
coplot(gain ~ diet|supplement,rows=2))
coplot(weights$gain ~ weights$diet|weights$supplement, rows = 2)
coplot(weights$gain ~ weights$diet|weights$supplement)
coplot(weights$gain ~ weights$diet|weights$supplement)
coplot(weights$gain ~ weights$supplement|weights$diet)
View(weights)
coplot(weights$gain ~ as.factor(weights$supplement)|as.factor(weights$diet))
coplot(weights$gain ~
as.factor(weights$diet)|as.factor(weights$supplement))
weights$diet <- as.factor(weight$diet)
weights$diet <- as.factor(weights$diet)
head(weights)
weights <- read.csv("C:/Users/valen/git/ECMA/data/growth2.txt", sep="\t")
head(weights)
weights <- read.csv("C:/Users/valen/git/ECMA/data/growth2.txt", sep="\t")
weights$diet <- as.factor(weights$diet)
weights$supplement <- as.factor(weights$supplement)
head(weights)
table(weights$diet, weights$supplement)
with(weights,
coplot(gain ~ diet|supplement,rows=2))
with(weights,
coplot(gain ~ diet|supplement))
model <- aov(gain ~ diet * supplement, data = weights)
summary(model)
weights$diet <- relevel(weights$diet, ref="oats")
with(weights, interaction.plot(diet,supplement, response = gain))
model2 <- aov(gain~diet + supplement, data = weights)
summary(model2)
summary.lm(model)
summary.lm(model)
summary.lm(model2)
anova(model,model2)
TukeyHSD(model2)
plot(TukeyHSD(model2))
library(sjPlot)
# plot_model(model2, type = "diag")
plot_model(model2, type="eff")
# plot_model(model2, type = "diag")
plot_model(model2, type="pred")
data(iris)
head(iris)
fitiris <- lm(Petal.Length ~ Petal.Width * Species, data = iris)
library(jtools)
plot_model(fitiris, type="int")
summary(fitiris)
summary(fitiris)
library(readr)
captures <- read_delim("data/captures.csv",
delim = ";", escape_double = FALSE, col_types = cols(animal_id = col_integer(),
capture_id = col_integer(), data = col_date(format = "%d/%m/%Y"),
occasion = col_integer(), trap_id = col_integer(),
chip = col_character()), trim_ws = TRUE)
View(captures)
View(captures)
rm(captures)
captures <- read_delim("data/captures.csv",
delim = ";", escape_double = FALSE,
col_types = cols(animal_id = col_integer(),
capture_id = col_integer(), data = col_date(format = "%d/%m/%Y"),
occasion = col_integer(), trap_id = col_integer(),
chip = col_character()), trim_ws = TRUE)
View(captures)
